/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as DiscoverRouteImport } from './routes/discover'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SessionsCreateRouteImport } from './routes/sessions/create'
import { Route as SessionsSessionIdRouteImport } from './routes/sessions/$sessionId'
import { Route as ProfileEditRouteImport } from './routes/profile_.edit'

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const DiscoverRoute = DiscoverRouteImport.update({
  id: '/discover',
  path: '/discover',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SessionsCreateRoute = SessionsCreateRouteImport.update({
  id: '/sessions/create',
  path: '/sessions/create',
  getParentRoute: () => rootRouteImport,
} as any)
const SessionsSessionIdRoute = SessionsSessionIdRouteImport.update({
  id: '/sessions/$sessionId',
  path: '/sessions/$sessionId',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileEditRoute = ProfileEditRouteImport.update({
  id: '/profile_/edit',
  path: '/profile/edit',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/discover': typeof DiscoverRoute
  '/profile': typeof ProfileRoute
  '/profile/edit': typeof ProfileEditRoute
  '/sessions/$sessionId': typeof SessionsSessionIdRoute
  '/sessions/create': typeof SessionsCreateRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/discover': typeof DiscoverRoute
  '/profile': typeof ProfileRoute
  '/profile/edit': typeof ProfileEditRoute
  '/sessions/$sessionId': typeof SessionsSessionIdRoute
  '/sessions/create': typeof SessionsCreateRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/discover': typeof DiscoverRoute
  '/profile': typeof ProfileRoute
  '/profile_/edit': typeof ProfileEditRoute
  '/sessions/$sessionId': typeof SessionsSessionIdRoute
  '/sessions/create': typeof SessionsCreateRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/discover'
    | '/profile'
    | '/profile/edit'
    | '/sessions/$sessionId'
    | '/sessions/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/discover'
    | '/profile'
    | '/profile/edit'
    | '/sessions/$sessionId'
    | '/sessions/create'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/discover'
    | '/profile'
    | '/profile_/edit'
    | '/sessions/$sessionId'
    | '/sessions/create'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  DiscoverRoute: typeof DiscoverRoute
  ProfileRoute: typeof ProfileRoute
  ProfileEditRoute: typeof ProfileEditRoute
  SessionsSessionIdRoute: typeof SessionsSessionIdRoute
  SessionsCreateRoute: typeof SessionsCreateRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/discover': {
      id: '/discover'
      path: '/discover'
      fullPath: '/discover'
      preLoaderRoute: typeof DiscoverRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sessions/create': {
      id: '/sessions/create'
      path: '/sessions/create'
      fullPath: '/sessions/create'
      preLoaderRoute: typeof SessionsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sessions/$sessionId': {
      id: '/sessions/$sessionId'
      path: '/sessions/$sessionId'
      fullPath: '/sessions/$sessionId'
      preLoaderRoute: typeof SessionsSessionIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile_/edit': {
      id: '/profile_/edit'
      path: '/profile/edit'
      fullPath: '/profile/edit'
      preLoaderRoute: typeof ProfileEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  DiscoverRoute: DiscoverRoute,
  ProfileRoute: ProfileRoute,
  ProfileEditRoute: ProfileEditRoute,
  SessionsSessionIdRoute: SessionsSessionIdRoute,
  SessionsCreateRoute: SessionsCreateRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
